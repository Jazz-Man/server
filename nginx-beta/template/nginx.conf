<% for module in $(ls /usr/lib/nginx/modules/); do -%>
load_module                             <%= modules/$module %>;
<% done -%>

<% if [ "$WWW_USER" != $(whoami) ]; then -%>
user                                    <%= $WWW_USER -%>;
<% fi -%>

worker_processes                        auto;
worker_rlimit_nofile                    65535;
timer_resolution                        100ms;
pcre_jit                                on;
thread_pool                             default threads=32 max_queue=65536;

events {
    worker_connections                  65535;
    multi_accept                        on;
    use                                 epoll;
}

http {
	include                             <%= $NGINX_CONF_PREFIX -%>/mime.types;

<% if test -f "$NGINX_CONF_PREFIX/naxsi_core.rules"; then -%>
    include                             <%= $NGINX_CONF_PREFIX -%>/naxsi_core.rules;
<% fi -%>

    default_type                        application/octet-stream;
    charset                             UTF-8;
    etag                                on;
    sendfile                            on;
    sendfile_max_chunk                  512k;
    send_timeout                        10s;
    tcp_nopush                          on;
    tcp_nodelay                         on;
    keepalive_timeout                   30;
    keepalive_requests                  1000;
    lingering_time                      20s;
    lingering_timeout                   5s;
    keepalive_disable                   msie6;
    reset_timedout_connection           on;
    request_pool_size                   32k;
    output_buffers                      8 256k;
    postpone_output                     1460;
    server_tokens                       off;

    client_max_body_size                <%= $PHP_POST_MAX_SIZE -%>M;
    client_body_buffer_size             128k;
    client_header_buffer_size           3m;
    large_client_header_buffers         4 256k;

    open_file_cache                     max=75000 inactive=60s;
    open_file_cache_valid               120s;
    open_file_cache_min_uses            2;
    open_file_cache_errors              off;
    open_log_file_cache                 max=20000 inactive=30s min_uses=2;

    ignore_invalid_headers              on;

    map_hash_bucket_size                256;
    map_hash_max_size                   4096;
    types_hash_max_size                 2048;

    map                                 $http_user_agent $no_logs {
                                        default 1;
<% if [ "$NO_LOGS_USER_AGENT" != "false" ]; then -%>
<% for no_logs_ua in $NO_LOGS_USER_AGENT; do -%>
                                        "~*<%= $no_logs_ua %>*" 0;
<% done -%>
<% fi -%>
    }

    map                                 $http_cookie $no_cache {
<% if [ "$NOCACHE_COOKIE" != "false" ]; then -%>
<% for nocache_cookie in $NOCACHE_COOKIE; do -%>
	                                    ~*<%= $nocache_cookie %>* 1;
<% done -%>
<% fi -%>
    }

	log_format                          blocked '$time_local: Blocked request from $http_x_real_ip $request';
	log_format                          main_ext '{ "@timestamp": "$time_iso8601", '
                                                          '"@fields": { '
                                                          '"remote_addr": "$remote_addr", '
                                                          '"remote_user": "$remote_user", '
                                                          '"status": "$status", '
                                                          '"request": "$request", '
                                                          '"request_uri": "$request_uri", '
                                                          '"request_method": "$request_method", '
                                                          '"request_time": "$request_time", '
                                                          '"request_uri_query": "$query_string", '
                                                          '"http_referrer": "$http_referer", '
                                                          '"http_user_agent": "$http_user_agent", '
                                                          '"http_forward": "$proxy_add_x_forwarded_for", '
                                                          '"http_header": "$http_x_header", '
                                                          '"body_bytes_sent": "$body_bytes_sent", '
                                                          '"server_name": "$server_name", '
                                                          '"upstream_addr": "$upstream_addr", '
                                                          '"upstream_status": "$upstream_status", '
                                                          '"upstream_response_time": "$upstream_response_time", '
                                                          '"upstream_response_length": "$upstream_response_length", '
                                                          '"upstream_cache_status": "$upstream_cache_status" } }';

	<% if [ "$NGINX_LOG_STDOUT" != "false" ]; then -%>
	access_log                          <% [[ "$NGINX_ENABLE_ACCESS_LOG" != "false" ]] && echo "${NGINX_LOG_PREFIX}/access.log main_ext;" || echo "${NGINX_ENABLE_ACCESS_LOG};" %>
	<% else -%>
	access_log                          <% [[ "$NGINX_ENABLE_ACCESS_LOG" != "false" ]] && echo "/dev/stdout main_ext;" || echo "${NGINX_ENABLE_ACCESS_LOG};" %>
	<% fi -%>

	<% if [ "$NGINX_LOG_STDOUT" != "false" ]; then -%>
	error_log                           <% [[ "$NGINX_ENABLE_ERROR_LOG" != "false" ]] && echo "${NGINX_LOG_PREFIX}/error.log error;" || echo "${NGINX_ENABLE_ERROR_LOG};" %>
	<% else -%>
	error_log                           <% [[ "$NGINX_ENABLE_ERROR_LOG" != "false" ]] && echo "/dev/stdout error;" || echo "${NGINX_ENABLE_ERROR_LOG};" %>
	<% fi -%>

	resolver                            1.1.1.1 8.8.8.8 8.8.4.4 valid=60s;
    resolver_timeout                    15s;

    map                                 $http_x_forwarded_proto $proxy_x_forwarded_proto {include <%= $NGINX_CONF_PREFIX -%>/map.d/header/proto.map;}
    map                                 $http_x_forwarded_port $proxy_x_forwarded_port {include <%= $NGINX_CONF_PREFIX -%>/map.d/header/port.map;}
    map                                 $http_upgrade $proxy_connection {include <%= $NGINX_CONF_PREFIX -%>/map.d/header/upgrade.map;}
    map                                 $scheme $proxy_x_forwarded_ssl {include <%= $NGINX_CONF_PREFIX -%>/map.d/header/scheme.map;}
    map                                 $host:$server_port$request_uri $noindex {include <%= $NGINX_CONF_PREFIX -%>/map.d/header/robot.map;}
    map                                 $request_method $skip_fetch {include <%= $NGINX_CONF_PREFIX -%>/map.d/srcache/*.map;}
    map                                 $sent_http_content_type $expires {include <%= $NGINX_CONF_PREFIX -%>/map.d/cache/expires.map;}

    map                                 $request_uri $redirect_uri {include <%= $NGINX_CONF_PREFIX -%>/map.d/redirects/*.map;}
    map                                 $request_uri $no_cache {include <%= $NGINX_CONF_PREFIX -%>/map.d/nocache/nocache.map;}


    map                                 $http_user_agent $crawler_pre {include <%= $NGINX_CONF_PREFIX -%>/map.d/referrer/crawler.map;}
    map                                 $http_user_agent $bot_pre {include <%= $NGINX_CONF_PREFIX -%>/map.d/referrer/bot.map;}
    map                                 $args $prerender {default $bot_pre; "~(^|&)_escaped_fragment_=" 1;}


<% if [ "$PHP_FPM_ENABLE_BACKEND_POOL" != "false" ]; then -%>
    upstream php-fpm-backend {
		zone php-fpm-backend            64k;
		hash                            $scheme$request_uri;
		keepalive                       64;
		server                          <% [[ "$PHP_FPM_BACKEND_PORT" != "false" ]] && echo "127.0.0.1:${PHP_FPM_BACKEND_PORT} max_fails=3 fail_timeout=30s;" || echo "unix:${PHP_LISTEN_PREFIX}/backend.sock max_fails=3 fail_timeout=30s;" -%>

	}
<% fi -%>

	upstream php-fpm-frontend {
		zone php-fpm-frontend           64k;
		hash                            $scheme$request_uri;
		keepalive                       64;
		server                          <% [[ "$PHP_FPM_FRONTEND_PORT" != "false" ]] && echo "127.0.0.1:${PHP_FPM_FRONTEND_PORT} max_fails=3 fail_timeout=30s;" || echo "unix:${PHP_LISTEN_PREFIX}/frontend.sock max_fails=3 fail_timeout=30s;" -%>

	}

    map                                 $http_cookie $php_session_cookie {
                                        default "";
                                        ~PHPSESSID=(?<sessionkey>[a-zA-Z0-9]+) $sessionkey;
    }
    fastcgi_cache_path                  <%= $NGINX_CACHE_PREFIX -%>/fastcgi keys_zone=fastcgicache:10m levels=1:2 inactive=30m max_size=64m;
    fastcgi_cache_key                   $scheme$request_method$host$request_uri$php_session_cookie;

	proxy_cache_path                    <%= $NGINX_CACHE_PREFIX -%>/proxy keys_zone=proxycache:10m levels=1:2 inactive=30m max_size=64m;
	proxy_cache_key                     $scheme$request_method$http_host$request_uri;

    expires                             $expires;

    index                               app.php index.php index.html default.html;

    gzip                                on;
    gzip_static                         on;
    gzip_disable                        "MSIE [1-6].(?!.*SV1)";
    gzip_buffers                        16 4k;
    gzip_vary                           on;
    gzip_proxied                        any;
    gzip_min_length                     256;
    gzip_types
    <% for type in $(cat compression_mime_type.txt); do -%>
	<%= $type %>
    <% done -%>;

    brotli                              on;
    brotli_static                       on;
    brotli_comp_level                   6;
    brotli_min_length                   1000;
    brotli_buffers                      32 8k;
    brotli_types
    <% for type in $(cat compression_mime_type.txt); do -%>
    <%= $type %>
    <% done %>;

    proxy_http_version                  1.1;
	proxy_buffer_size                   256k;
	proxy_buffers                       4 256k;
	proxy_busy_buffers_size             256k;
	proxy_temp_file_write_size          256k;
	proxy_headers_hash_bucket_size      256;
	proxy_headers_hash_max_size         1024;
	proxy_read_timeout                  30s;
	proxy_send_timeout                  30s;
	proxy_connect_timeout               30s;
	slice                               1m;
	proxy_cache                         proxycache;
	proxy_cache_methods                 GET HEAD;
	proxy_cache_lock                    on;
	proxy_cache_lock_age                5s;
	proxy_cache_lock_timeout            5s;
	proxy_cache_use_stale               error timeout invalid_header updating http_500 http_502 http_503 http_504;
	proxy_cache_valid                   200 302 30s;
	proxy_cache_valid                   301 60s;
	proxy_cache_valid                   any 1m;
	proxy_cache_revalidate              on;
	proxy_cache_background_update       on;
	proxy_cache_bypass                  $http_pragma $no_cache $cookie_nocache $arg_nocache;
	proxy_no_cache                      $no_cache;

	include                             <%= $NGINX_CONF_PREFIX -%>/conf.d/botblocker-nginx-settings.conf;
	include                             <%= $NGINX_CONF_PREFIX -%>/conf.d/globalblacklist.conf;
	include                             <%= $NGINX_CONF_PREFIX -%>/sites-available/*.conf;

}