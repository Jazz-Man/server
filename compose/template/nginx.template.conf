<% for module in $(ls /usr/lib/nginx/modules/); do -%>
load_module                             <%= modules/$module %>;
<% done -%>

user                                    www-data;
worker_processes                        auto;
worker_rlimit_nofile                    65535;
timer_resolution                        100ms;
pcre_jit                                on;
thread_pool                             default threads=32 max_queue=65536;

events {
    worker_connections                  65535;
    multi_accept                        on;
    use                                 epoll;
}

http {
    include                             <%= $CONF_PREFIX -%>/mime.types;

<% if test -f "$CONF_PREFIX/naxsi_core.rules"; then -%>
    include                             <%= $CONF_PREFIX -%>/naxsi_core.rules;
<% fi -%>

    default_type                        application/octet-stream;
    charset                             UTF-8;
    etag                                on;
    sendfile                            on;
    sendfile_max_chunk                  512k;
    send_timeout                        10s;
    tcp_nopush                          on;
    tcp_nodelay                         on;
    keepalive_timeout                   30;
    keepalive_requests                  1000;
    lingering_time                      20s;
    lingering_timeout                   5s;
    keepalive_disable                   msie6;
    reset_timedout_connection           on;
    request_pool_size                   32k;
    output_buffers                      8 256k;
    postpone_output                     1460;

    client_max_body_size                100M;
    client_body_buffer_size             128k;
    client_header_buffer_size           3m;
    large_client_header_buffers         4 256k;

    open_file_cache                     max=75000 inactive=60s;
    open_file_cache_valid               120s;
    open_file_cache_min_uses            2;
    open_file_cache_errors              off;
    open_log_file_cache                 max=20000 inactive=30s min_uses=2;

    ignore_invalid_headers              on;

<% if test -f "$GEO_IP_DB_DIR/GeoIP.dat"; then -%>
    geoip_country                       <%= $GEO_IP_DB_DIR -%>GeoIP.dat;
<% fi -%>
<% if test -f "$GEO_IP_DB_DIR/GeoLiteCity.dat"; then -%>
    geoip_city                          <%= $GEO_IP_DB_DIR -%>GeoLiteCity.dat;
<% fi -%>

    map_hash_bucket_size                256;
    map_hash_max_size                   4096;
    types_hash_max_size                 2048;
    variables_hash_max_size             2048;

    geo                                 $rate_limit {
                                        default 1;
<% if [ "$GEO_RATELIMIT" != "false" ]; then -%>
<% for ratelimit in $GEO_RATELIMIT; do -%>
										<%= $ratelimit -%> 0;
<% done -%>
<% fi -%>
    }

    map                                 $rate_limit $rate_limit_key {include <%= $CONF_PREFIX -%>/map.d/access/*.map;}
    map                                 $http_user_agent $no_logs {
                                        default 1;
<% if [ "$NO_LOGS_USER_AGENT" != "false" ]; then -%>
<% for no_logs_ua in $NO_LOGS_USER_AGENT; do -%>
                                        "~*<%= $no_logs_ua %>*" 0;
<% done -%>
<% fi -%>
    }

    map                                 $http_cookie $no_cache {
<% if [ "$NOCACHE_COOKIE" != "false" ]; then -%>
<% for nocache_cookie in $NOCACHE_COOKIE; do -%>
	                                    ~*<%= $nocache_cookie %>* 1;
<% done -%>
<% fi -%>
    }

    limit_req_zone                      $rate_limit_key zone=req_zone:10m rate=200r/s;

    <%+ log.template.conf -%>

<% if [ "$NGINX_PROXY_UPSTREAM" != "false" ]; then -%>
    upstream proxy {
        zone proxy                      64k;
        keepalive                       32;
        server                          <%= $NGINX_PROXY_UPSTREAM -%> max_fails=3 fail_timeout=30s;
    }
<% fi -%>
<% if [ "$REDIS_UPSTREAM" != "false" ]; then -%>
    upstream redis {
	    zone redis                      64k;
	    hash                            $scheme$request_uri;
	    keepalive                       64;
	    server                          <%= $REDIS_UPSTREAM -%> max_fails=3 fail_timeout=30s;
    }
<% fi -%>

    resolver                            1.1.1.1 8.8.8.8 8.8.4.4 valid=60s;
    resolver_timeout                    15s;

    map                                 $http_x_forwarded_proto $proxy_x_forwarded_proto {include <%= $CONF_PREFIX -%>/map.d/header/proto.map;}
    map                                 $http_x_forwarded_port $proxy_x_forwarded_port {include <%= $CONF_PREFIX -%>/map.d/header/port.map;}
    map                                 $http_upgrade $proxy_connection {include <%= $CONF_PREFIX -%>/map.d/header/upgrade.map;}
    map                                 $scheme $proxy_x_forwarded_ssl {include <%= $CONF_PREFIX -%>/map.d/header/scheme.map;}

#     map                                 $host:$server_port$request_uri $noindex {
#     include <%= $CONF_PREFIX -%>/map.d/header/robot.map;
#     }

    map                                 $request_method $skip_fetch {include <%= $CONF_PREFIX -%>/map.d/srcache/*.map;}

    map                                 $sent_http_content_type $expires {include <%= $CONF_PREFIX -%>/map.d/cache/expires.map;}

    map                                 $request_uri $redirect_uri {include <%= $CONF_PREFIX -%>/map.d/redirects/*.map;}
    map                                 $request_uri $no_cache {include <%= $CONF_PREFIX -%>/map.d/nocache/nocache.map;}


    map                                 $http_user_agent $crawler_pre {include <%= $CONF_PREFIX -%>/map.d/referrer/crawler.map;}
    map                                 $http_user_agent $bot_pre {include <%= $CONF_PREFIX -%>/map.d/referrer/bot.map;}
    map                                 $args $prerender {default $bot_pre; "~(^|&)_escaped_fragment_=" 1;}

<% if [ "$PHP_FPM_UPSTREAM" != "false" ]; then -%>
    upstream php-fpm {
	    zone php-fpm                    64k;
	    hash                            $scheme$request_uri;
	    keepalive                       64;
	    server                          <%= $PHP_FPM_UPSTREAM -%> max_fails=3 fail_timeout=30s;
    }

    map                                 $http_cookie $php_session_cookie {
                                        default "";
                                        ~PHPSESSID=(?<sessionkey>[a-zA-Z0-9]+) $sessionkey;
    }
    fastcgi_cache_path                  <%= $CACHE_PREFIX -%>/fastcgi keys_zone=fastcgicache:10m levels=1:2 inactive=30m max_size=64m;
    fastcgi_cache_key                   $scheme$request_method$host$request_uri$php_session_cookie;
<% fi -%>

    proxy_cache_path                    <%= $CACHE_PREFIX -%>/proxy keys_zone=proxycache:10m levels=1:2 inactive=30m max_size=64m;
    proxy_cache_key                     $scheme$request_method$http_host$request_uri;

    map                                 $request_method $purge_method {include <%= $CONF_PREFIX -%>/map.d/purge/*.map;}
    geo                                 $purge_allowed {include <%= $CONF_PREFIX -%>/geo.d/purge.conf;}

    geo                                 $whitelist {include <%= $CONF_PREFIX -%>/geo.d/whitelist.conf;}
    map                                 $whitelist $limit_access {include <%= $CONF_PREFIX -%>/map.d/access/*.map;}
    expires                             $expires;

    index                               app.php index.php index.html default.html;

    gzip                                on;
    gzip_static                         on;
    gzip_disable                        "MSIE [1-6].(?!.*SV1)";
    gzip_buffers                        16 4k;
    gzip_vary                           on;
    gzip_proxied                        any;
    gzip_min_length                     256;
    gzip_types
    <% for type in $(cat compression_mime_type.template.txt); do -%>
	<%= $type %>
    <% done -%>;

    brotli                              on;
    brotli_static                       on;
    brotli_comp_level                   6;
    brotli_min_length                   1000;
    brotli_buffers                      32 8k;
    brotli_types
    <% for type in $(cat compression_mime_type.template.txt); do -%>
    <%= $type %>
    <% done %>;

    proxy_http_version                  1.1;
	proxy_buffer_size                   256k;
	proxy_buffers                       4 256k;
	proxy_busy_buffers_size             256k;
	proxy_temp_file_write_size          256k;
	proxy_headers_hash_bucket_size      256;
	proxy_headers_hash_max_size         1024;
	proxy_read_timeout                  30s;
	proxy_send_timeout                  30s;
	proxy_connect_timeout               30s;
	slice                               1m;
	proxy_cache                         proxycache;
	proxy_cache_methods                 GET HEAD;
	proxy_cache_lock                    on;
	proxy_cache_lock_age                5s;
	proxy_cache_lock_timeout            5s;
	proxy_cache_use_stale               error timeout invalid_header updating http_500 http_502 http_503 http_504;
	proxy_cache_valid                   200 302 30s;
	proxy_cache_valid                   301 60s;
	proxy_cache_valid                   any 1m;
	proxy_cache_revalidate              on;
	proxy_cache_background_update       on;
	proxy_cache_bypass                  $http_pragma $no_cache $cookie_nocache $arg_nocache;
	proxy_no_cache                      $no_cache;

    include                             <%= $CONF_PREFIX -%>/conf.d/botblocker-nginx-settings.conf;
    include                             <%= $CONF_PREFIX -%>/conf.d/globalblacklist.conf;
    include                             <%= $CONF_PREFIX -%>/sites-available/*.conf;
}